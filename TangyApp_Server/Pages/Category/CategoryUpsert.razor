@page "/category/add"
@page "/category/edit/{Id:int}"
@inject IRepositoryCategory _category
@inject NavigationManager navigation

<div class="row my-2">
    <h3 class="text-primary">@Title Category</h3>

    <div class="col-12">
        <EditForm Model=category OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator/>
            @*<ValidationSummary/>*@
            <div class="form-group">
            @if(containsAny == false)
            {
                <label>Name</label>
                <InputText @bind-Value=category.Name class="form-control"></InputText>
                <ValidationMessage For="()=>category.Name"></ValidationMessage>
            }
            else
            {
                <p class="text-primary">Loading</p>   
            }
            </div>
            <div class="form-group py-3">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="/category" class="btn btn-secondary">Back to Index</NavLink>
            </div>
        </EditForm>
    </div>
</div>
@code {
    [Parameter]
    public int Id { get; set; }

    public CategoryDto category = new CategoryDto();
    public bool containsAny { get; set; } = true;
    public string Title { get; set; } = "Create";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
                Title = "Create";
            else
                Title = "Edit";
            GetDatabase();
        }
    }

    public void GetDatabase()
    {
        if(Id != 0)
        {
            category = _category.Get(Id);
        }
        containsAny = false;
        StateHasChanged();
    }

    public void SubmitForm()
    {
        if(Id == 0)
        {
            _category.Create(category);
        }
        else
        {
            _category.Update(category);
        }
        navigation.NavigateTo("category");
    }
}
